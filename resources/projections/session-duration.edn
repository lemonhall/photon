{:projection-name "session-duration",
 :stream-name "cambio",
 :language :clojure,
 :reduction
 (serializable.fn/fn
  [p n]
  (let
   [data (:payload n)
    payload data
    index-of (fn [s b] (.indexOf s b))
    session-id (:session_id data)
    server-timestamp (:server-timestamp n)
    user-agent (:user-agent (:headers payload))]
    (if (and (not (nil? session-id))
             (not (nil? user-agent))
             (= -1 (index-of user-agent "curl"))
             (= -1 (index-of user-agent "Apache-HttpClient"))
             (= -1 (index-of user-agent "node-superagent")))
      (if (contains? (:sessions p) session-id)
        (assoc-in p [:sessions session-id :end] server-timestamp)
        (assoc-in p [:sessions session-id :start] server-timestamp))
      p))),
 :initial-value {}}
